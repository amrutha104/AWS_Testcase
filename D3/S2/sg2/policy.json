{
    "ManagedPolicy": "arn:aws:iam::aws:policy/IAMReadOnlyAccess",
    "InlinePolicy": {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Action": "ec2:*",
                "Effect": "Allow",
                "Resource": "*"
            },
            {
                "Effect": "Deny",
                "Action": "ec2:RunInstances",
                "Resource": "arn:aws:ec2:*:*:instance/*",
                "Condition": {
                    "ForAnyValue:StringNotLike": {
                        "ec2:InstanceType": [
                            "t2.nano",
                            "t2.small",
                            "t2.micro",
                            "t2.medium",
                            "t3.micro"
                        ]
                    }
                }
            },
            {
                "Effect": "Allow",
                "Action": "s3:*",
                "Resource": "*"
            },
            {
                "Effect": "Allow",
                "Action": "elasticloadbalancing:*",
                "Resource": "*"
            },
            {
                "Effect": "Allow",
                "Action": "cloudwatch:*",
                "Resource": "*"
            },
            {
                "Effect": "Allow",
                "Action": "autoscaling:*",
                "Resource": "*"
            },
            {
                "Effect": "Allow",
                "Action": "ecr:*",
                "Resource": "*"
            },
            {
                "Effect": "Allow",
                "Action": "ecr-public:*",
                "Resource": "*"
            },
            {
                "Effect": "Allow",
                "Action": "route53:*",
                "Resource": "*"
            },
            {
                "Action": "codeartifact:*",
                "Effect": "Allow",
                "Resource": "*"
            },
            {
                "Action": "events:*",
                "Effect": "Allow",
                "Resource": "*"
            },
            {
                "Action": "codecommit:*",
                "Effect": "Allow",
                "Resource": "*"
            },
            {
                "Action": "codedeploy:*",
                "Effect": "Allow",
                "Resource": "*"
            },
            {
                "Action": "codepipeline:*",
                "Effect": "Allow",
                "Resource": "*"
            },
            {
                "Action": "cloudfront:*",
                "Effect": "Allow",
                "Resource": "*"
            },
            {
                "Effect": "Allow",
                "Action": [
                    "iam:DeleteAccessKey",
                    "iam:GetAccessKeyLastUsed",
                    "iam:UpdateAccessKey",
                    "iam:CreateAccessKey",
                    "iam:ListAccessKeys",
                    "iam:CreateRole",
                    "iam:DeleteRole",
                    "iam:AttachRolePolicy",
                    "iam:PassRole",
                    "iam:CreatePolicy",
                    "iam:CreatePolicyVersion",
                    "iam:GetRole",
                    "iam:DeletePolicyVersion"
                ],
                "Resource": "*"
            },
            {
                "Effect": "Allow",
                "Action": [
                    "sts:GetServiceBearerToken",
                    "sts:AssumeRole"
                ],
                "Resource": "*"
            },
            {
                "Effect": "Allow",
                "Action": "iam:CreateServiceLinkedRole",
                "Resource": "*",
                "Condition": {
                    "StringEquals": {
                        "iam:AWSServiceName": [
                            "autoscaling.amazonaws.com",
                            "ec2scheduled.amazonaws.com",
                            "elasticloadbalancing.amazonaws.com",
                            "spot.amazonaws.com",
                            "spotfleet.amazonaws.com",
                            "s3.amazonaws.com",
                            "ecr.amazonaws.com",
                            "ecs-tasks.amazonaws.com",
                            "ecs.amazonaws.com",
                            "ecs.application-autoscaling.amazonaws.com",
                            "cloudfront.amazonaws.com",
                            "codebuild.amazonaws.com",
                            "codecommit.amazonaws.com",
                            "codedeploy.amazonaws.com",
                            "codepipeline.amazonaws.com",
                            "route53.amazonaws.com"
                        ]
                    }
                }
            }
        ]
    }
}